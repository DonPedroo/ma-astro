---
import MainLayout from '../layouts/HomepageLayout.astro';
import ProjectItem from '../components/ProjectItem.astro'; 
import Quotes from '../components/Quotes.astro'; 
import Introduction from '../components/Introduction.astro';
import Footer from '../components/Footer.astro';
import LargeParagraph from '../components/LargeParagraph.astro';

interface Frontmatter {
  title: string;
  introduction: Introduction;
  footer: Footer;
  largeParagraph: LargeParagraphSection;
  quotes: QuotesSection;
  projects: ProjectsSection;
}

interface Introduction {
  introField1: string;
  introField2: string;
  media?: string;
}

interface LargeParagraphSection {
  type: 'largeParagraph';
  content: string;
}

interface QuotesSection {
  type: 'quotes';
  quotes: Quote[];
  additionalParagraph?: { content: string };
}

interface ProjectsSection {
  type: 'projects';
  projects: string[];
}

interface Footer {
  footerField1: string;
  footerField2: string;
  footerField3: string;
  media?: string;
}

interface Quote {
  quote: string;
  author: string;
}

interface Project {
  title: string;
  description: string;
  url: string;
  media?: string;
}

interface MarkdownFile {
  frontmatter: Frontmatter;
  default: any;
}

interface ProjectMarkdownFile {
  frontmatter: Project; 
  default: any;
}

const allPages = import.meta.glob<MarkdownFile>('../data/**/*.md', { eager: true });
const allProjects = import.meta.glob<ProjectMarkdownFile>('../data/projects/*.md', { eager: true });

const post = allPages['../data/home/home.md'];

if (!post) {
  console.error('Post not found');
} else {
  console.log('Post found:', post);
}

const data = post?.frontmatter || { title: 'Home Page', sections: [] };
const Content = post?.default || 'Content not found.';

const projectsMap = Object.values(allProjects).reduce((map, project) => {
  map[project.frontmatter.title] = {
    title: project.frontmatter.title,
    description: project.frontmatter.description || '',
    url: `/projects/${project.frontmatter.title.toLowerCase().replace(/\s+/g, '-')}`,
    media: project.frontmatter.media || '',  
  };
  return map;
}, {} as Record<string, Project>);

function getCleanProjectName(url: string): string {
  return url.replace('/projects/', '');
}
const isHomePage = true;
---

<MainLayout 
  title={data.title} 
  isHomePage={isHomePage}
  introduction={data.introduction}
  footer={data.footer}
  largeParagraph={data.largeParagraph}
  quotes={data.quotes}
  projects={data.projects}
>

  <Introduction 
    introField1={data.introduction.introField1} 
    introField2={data.introduction.introField2} 
    media={data.introduction.media} 
    id="introduction" 
  />

  <LargeParagraph content={data.largeParagraph.content} />

  <Quotes quotes={data.quotes.quotes} additionalParagraph={data.quotes.additionalParagraph} />
  
  {data.projects.projects.map((projectTitle) => {
    const project = projectsMap[projectTitle];
    const cleanProjectName = getCleanProjectName(project.url);
  
    return (
      <ProjectItem
        title={project.title}
        description={project.description}
        url={project.url}
        media={project.media}
        cleanProjectName={cleanProjectName}
      />
    );
  })}
  

  <Footer 
    footerField1={data.footer.footerField1}
    footerField2={data.footer.footerField2}
    footerField3={data.footer.footerField3}
    media={data.footer.media}
  />

</MainLayout>
