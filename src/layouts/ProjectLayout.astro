---
import type { MarkdownInstance } from 'astro';
import MainLayout from './HomepageLayout.astro';
import Arrow from '../components/Arrow.astro';
import Media from '../components/Media.astro';

interface Frontmatter {
  title: string;
  seo_title: string;
  description: string;
  seo_description: string;
  seo_keywords: string;
  slug: string;
  media?: string;
  square_image?: {
    square_image_media: string;
    alt_text: string;
  };
  logos?: Array<{
    detailed_logos: string;
    alt_text: string;
  }>;
  detailed_quote?: {
    detailed_quote_content: string;
    detailed_quote_content_auth: string;
  };
  stats_module?: {
    section_1: { header: string; content: string };
    section_2: { header: string; content: string };
    section_3: { header: string; content: string };
    stats_hero_image: { image: string; alt_text: string;image_css: string; };
    additional_section: { header: string; content: string; image: string; alt_text: string;image_css: string; };
  };
  details_module?: {
    main_section: { header: string; content: string; image: string; alt_text: string;image_css: string; };
    three_images_section: Array<{ image: string; alt_text: string; image_css: string;image_container_css: string }>;
  };
}



interface ProjectPageProps {
  frontmatter: Frontmatter;
  Content: MarkdownInstance<Frontmatter>['default'];
}

const { frontmatter } = Astro.props as ProjectPageProps;



function getLogoContainerClass(logosCount: number): string {
  let containerClass = "";
  switch (logosCount) {
    case 1:
      containerClass = "horizontal-slider-logos flex items-center justify-center horizontal-slider-logos-1";
      break;
    case 2:
    case 3:
      containerClass = "horizontal-slider-logos flex flex-col items-center justify-center mx-6 horizontal-slider-logos-3";
      break;
    case 4:
      containerClass = "horizontal-slider-logos grid grid-cols-2 gap-0 mx-6 horizontal-slider-logos-4";
      break;
    case 5:
      containerClass = "horizontal-slider-logos grid grid-cols-3 gap-4 mx-6 horizontal-slider-logos-5";
      break;
    case 6:
      containerClass = "horizontal-slider-logos grid grid-cols-3 gap-4 mx-6 horizontal-slider-logos-6";
      break;
    case 7:
      containerClass = "horizontal-slider-logos grid grid-cols-4 gap-4 mx-6 horizontal-slider-logos-7";
      break;
    case 8:
      containerClass = "horizontal-slider-logos grid grid-cols-2 gap-0 mx-6 horizontal-slider-logos-8";
      break;
    default:
      containerClass = "";
  }
  return containerClass;
}

const logoContainerClass = getLogoContainerClass(frontmatter.logos?.length || 0);

---


<MainLayout title={frontmatter.title} seo_title={frontmatter.seo_title} seo_description={frontmatter.seo_description} seo_keywords={frontmatter.seo_keywords}>

  <!-- fixed top-[20px] right-[20px] sm:top-[30px] sm:right-[30px] 2xl:top-[50px] 2xl:right-[50px] -->

   <div class="fixed sm:absolute right-0 top-0 z-40">
  <Arrow imgSrc="/images/x.svg" cssOut="opacity-0 pt-[20px] pr-[20px] sm:pt-[30px] sm:pr-[30px] 2xl:pt-[50px] 2xl:pr-[50px] " cssMid="w-20 h-20 xl:w-24 xl:h-24 2xl:w-36 2xl:h-36 bg-massyellow rounded-full" cssInner="w-full h-full flex flex-col justify-center items-center" altText="Close" slug={frontmatter.slug} link="/" type="data-arrow-scroll-close" />
 </div>
 
 <div class="absolute top-0 left-0 w-screen h-screen" data-detailed-media>
  {frontmatter.media && (
    <Media src={frontmatter.media} alt={frontmatter.title} cssClasses="hidden opacity-0 absolute inset-0 z-[-1] w-full h-full object-cover" />
  )}
 </div>

  <div id={frontmatter.slug}>

    

    <!-- {frontmatter.media && (
      <Media src={frontmatter.media} alt={frontmatter.title} cssClasses="absolute inset-0 z-[-1] w-full h-full object-cover" />
    )} -->
    <div class="
  flex 
  flex-col 
  sm:flex-row
  select-none	

  sm:h-screen
  " 
  data-horizontal-scroll
  >

  <!-- cursor-grab 
  overflow-x-scroll 
  overflow-y-hidden -->
      <section class="flex flex-col sm:flex-row">
        <div class="sm:w-[50vw] h-[55vh] sm:h-auto flex flex-col justify-center">
          {frontmatter.logos && (
            <div class={logoContainerClass} horizontal-slider-logos>
              {frontmatter.logos.map((logo) => (
                <div data-horizontal-logos>
                  <img src={logo.detailed_logos} alt={logo.alt_text} class="logo-item" />
                </div>
              ))}
            </div>
          )}
        </div>
        <div class="sm:w-[50vw] px-6 py-16 lg:p-8 xl:p-16 2xl:p-32 flex flex-col justify-center bg-massgrey" data-quote-container data-slider-gl data-param="reveal" data-type="color" data-bg="#EAEAEA">
          <div class="flex flex-row items-start space-x-3 sm:space-x-6 w-full" data-animation-quote>
            <img src="/images/quote.svg" class=" w-[20px] sm:w-[30px] xl:w-[40px] 2xl:w-[50px]" alt="Quote">
            <div class="flex flex-col mt-6 w-full">
              {frontmatter.detailed_quote && (
                <>
                  <h4 class="horizontal-quote text-massblue" data-test-anim>{frontmatter.detailed_quote.detailed_quote_content}</h4>
                  <p class="stripe-label text-massblue">- {frontmatter.detailed_quote.detailed_quote_content_auth}</p>
                </>
              )}
            </div>
          </div>
        </div>
      </section>



      <section class="flex h-[100vw] sm:h-[100vh] aspect-square	 bg-blue-700" data-slider-gl data-type="image">
        {frontmatter.square_image?.square_image_media && (
          <Media src={frontmatter.square_image.square_image_media} alt={frontmatter.square_image.alt_text} cssClasses="w-[100vw] sm:w-[100vh] aspect-square	 object-cover" />
        )}
      </section>

      <section class="flex flex-col sm:flex-row space-y-12 sm:space-y-0 grunge" data-slider-gl data-type="image">
        <div class="
        flex 
  flex-col 
  sm:h-[100vh] 
  sm:w-[50vw] 
  p-8
  lg:p-8 
  xl:p-10
  2xl:p-12 
  3xl:p-24 
  space-y-8 
  lg:space-y-8 
  xl:space-y-10
  2xl:space-y-12 
  3xl:space-y-16 
  justify-end
  " data-animation-txt-lg>
          <div class="flex w-full" data-animation-img-a>
            {frontmatter.details_module?.main_section.image && (
              <Media 
                src={frontmatter.details_module.main_section.image} 
                alt={frontmatter.details_module.main_section.alt_text} 
                cssClasses={`object-contain pointer-events-none ${frontmatter.details_module.main_section.image_css}`} 

              />
            )}
            
          </div>
          <div class="flex flex-col space-y-8 lg:space-y-8 xl:space-y-10 2xl:space-y-12 3xl:space-y-16 lg:w-[80%] xl:w-[80%] 2xl:w-[70%] 3xl:w-[60%]">
            <h4 class="horizontal-header">{frontmatter.details_module?.main_section.header}</h4>
            <p class="horizontal-description">{frontmatter.details_module?.main_section.content}</p>
          </div>
        </div>

        <div 
        class={`flex flex-col sm:flex-row ${frontmatter.details_module?.three_images_section.length === 2 ? 'sm:w-[50vw]' : 'sm:w-[70vw]'} p-8 space-y-12 sm:space-y-0`} 
        data-animation-paralax
      >
        {frontmatter.details_module?.three_images_section.map((image, index) => (
          <div class={`flex sm:h-screen ${image.image_container_css}`}>
            <Media 
              src={image.image} 
              alt={image.alt_text} 
              cssClasses={`object-contain pointer-events-none ${image.image_css}`} 
            />
          </div>
        ))}
      </div>
      
        
      </section>

      <section class="flex flex-col sm:flex-row space-y-12 sm:space-y-0  bg-massgrey" data-slider-gl data-type="color" data-bg="#EAEAEA">
        <div class="sm:w-[65vw]  flex flex-col sm:flex-row justify-center items-center space-y-12 sm:space-y-0" data-animation-txt-lg>
          <div class="
            flex 
  flex-col 
  sm:h-[100vh] 
  p-8
  lg:p-8 
  xl:p-10
  2xl:p-12 
  3xl:p-24 
  space-y-8 
  lg:space-y-8 
  xl:space-y-10
  2xl:space-y-12 
  3xl:space-y-16 
          sm:w-1/2 items-start">
            <div class="  flex 
  flex-col 
  flex-grow

  space-y-8 
  lg:space-y-8 
  xl:space-y-10 
  2xl:space-y-12 
  3xl:space-y-16    
  sm:h-1/2
  justify-center 
  
  ">
              <h4 class="text-black horizontal-header">{frontmatter.stats_module?.additional_section.header}</h4>
              <p class="text-black horizontal-description">{frontmatter.stats_module?.additional_section.content}</p>
            </div>
            {frontmatter.stats_module?.additional_section.image && (
              <div class="  flex 
  w-full 
  sm:h-1/2" data-animation-img-a>
              <Media 
                src={frontmatter.stats_module.additional_section.image} 
                alt={frontmatter.stats_module.additional_section.alt_text || "Mass Appeal"} 
                cssClasses={`object-contain pointer-events-none ${frontmatter.stats_module.additional_section.image_css}`} 
              />
              </div>
            )}            
          </div>
          <div class="  

p-8 
sm:p-0         
sm:flex 
  sm:w-1/2 
  sm:h-[80vh] 
  sm:items-center 
  sm:justify-center
  sm:py-0 " data-animation-img-b>
            {frontmatter.stats_module?.stats_hero_image.image && (
              <Media 
                src={frontmatter.stats_module?.stats_hero_image.image} 
                alt={frontmatter.stats_module?.stats_hero_image.alt_text || "Mass Appeal"} 
                cssClasses={`object-contain pointer-events-none ${frontmatter.stats_module.stats_hero_image.image_css}`} 

              />
            )}  
          </div>
        </div>
        <div class="sm:w-[35vw] flex flex-col justify-center p-8 pb-32 sm:p-0 sm:pb-0" data-animation-stats>
          {['section_1', 'section_2', 'section_3'].map(section => (
            <div class="sm:pl-12">
              <p class="stripe-label text-massblue">{frontmatter.stats_module?.[section].header}</p>
              <h5 class="project-header text-massblue">{frontmatter.stats_module?.[section].content}</h5>
            </div>
          ))}
        </div>
      </section>
    </div>
  </div>


</MainLayout>
