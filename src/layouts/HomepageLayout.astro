---

const { title, seo_title,seo_description,seo_keywords, isHomePage, introduction, largeParagraph, quotes, projects, footer, whatwedo, mediaAssets } = Astro.props; // New

import '../styles/global.css';
import Arrow from '../components/Arrow.astro';
import Mouse from '../components/Mouse.astro';
import Media from '../components/Media.astro';

import Nav from '../components/Nav.astro';


interface NavTitle {
  title: string;
  id: string;
}

const navTitles: NavTitle[] = [];

if (introduction?.nav_title) {
  navTitles.push({
    title: introduction.nav_title,
    id: introduction.id,
  });
}

if (largeParagraph?.nav_title) {
  navTitles.push({
    title: largeParagraph.nav_title,
    id: largeParagraph.id,
  });
}

if (whatwedo?.nav_title) {
  navTitles.push({
    title: whatwedo.nav_title,
    id: whatwedo.id,
  });
}



if (quotes?.nav_title) {
  navTitles.push({
    title: quotes.nav_title,
    id: quotes.id,
  });
}

if (projects?.nav_title) {
  navTitles.push({
    title: projects.nav_title,
    id: projects.id,
  });
}



if (footer?.nav_title) {
  navTitles.push({
    title: footer.nav_title,
    id: footer.id,
  });
}


---
<!--

   _____                                _____                              .__   
  /     \ _____    ______ ______       /  _  \ ______ ______   ____ _____  |  |  
 /  \ /  \\__  \  /  ___//  ___/      /  /_\  \\____ \\____ \_/ __ \\__  \ |  |  
/    Y    \/ __ \_\___ \ \___ \      /    |    \  |_> >  |_> >  ___/ / __ \|  |__
\____|__  (____  /____  >____  >     \____|__  /   __/|   __/ \___  >____  /____/
        \/     \/     \/     \/              \/|__|   |__|        \/     \/      


-->
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta name="keywords" content=`${seo_keywords}` />
    <meta name="description" content=`${seo_description}` />
    <link rel="icon" type="image/svg+xml" href="/images/ma-fav.svg" />
    <title>{seo_title}</title>
    <link rel="stylesheet" href="https://use.typekit.net/shx7hrr.css">
  </head>
  <body class="bg-black text-white">
    <div data-preloader class="fixed top-0 left-0 right-0 bottom-0 w-screen h-screen z-[50] pointer-events-none text-white bg-black flex">
      <div class="ml-16 mb-64 self-end">
        <span class="text-massyellow">Mass Appeal</span><br>loading...
      </div>
    </div>
        <Mouse />

    <div data-barba="wrapper">
      <Nav navTitles={navTitles} />

      <Arrow imgSrc="/images/arrow-up.svg" cssOut="hidden opacity-0 fixed bottom-8 right-8 xl:bottom-12 xl:right-12 3xl:bottom-24 3xl:right-24 mix-blend-difference" cssMid="border border-white rounded-full transition-color-border duration-300 ease-in-out hover:bg-massyellow hover:border-massyellow" cssInner="w-full h-full flex flex-col justify-center items-center mix-blend-difference" altText="Scroll Up" link="#introduction" type="data-arrow-up" />
      <div id="smooth-wrapper">
      <div id="smooth-content">
      <div data-barba="container" data-barba-namespace={isHomePage ? "home" : "project-detail"}>

        <slot></slot>
      </div>
      </div>
      </div>
      <div id="gl" class="fixed top-0 left-0 right-0 bottom-0 w-screen h-screen -z-10"></div>
      <div id="persistent-container" class="fixed left-0 top-0 z-10"></div>
      <div id="media-storage" class="fixed left-0 top-0 -z-10 w-screen h-screen">

        {mediaAssets.map((media, index) => (
          <>
            {media.src.startsWith('#') ? (
              <div 
                data-bg-type={media.bgType} 
                data-bg-id={media.sectionId} 
                class="fixed w-screen hidden max-h-screen overflow-hidden"
              >
                <div class="bg-massgrey w-screen h-screen"></div>
              </div>
            ) : media.bgType === '3' ? (
              // Explicit construction for media.bgType === '3'
              <div 
                data-bg-type={media.bgType} 
                data-bg-id={media.sectionId} 
                class="fixed w-screen hidden max-h-screen overflow-hidden"
              >
                <div class="grunge w-screen h-screen">
                  <Media 
                    src={media.src} 
                    alt={media.description || 'Media content'} 
                    cssClasses="hidden" 
                  />
                </div>
              </div>
            ) : (
              // Default construction for other media types
              <div 
                data-bg-type={media.bgType} 
                data-bg-id={media.sectionId} 
                class="fixed w-screen hidden max-h-screen overflow-hidden"
              >
                <Media 
                  src={media.src} 
                  alt={media.description || 'Media content'} 
                  cssClasses="w-screen h-screen object-cover brightness-75"
                />
              </div>
            )}
          </>
        ))}
        


      </div>
      
    </div>

    <script src="../scripts/app.js"></script>
  </body>
</html>
